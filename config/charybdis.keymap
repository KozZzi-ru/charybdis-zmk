#include <behaviors/mouse_keys.dtsi>
#include <dt-bindings/zmk/mouse.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

/ {
    behaviors {
        hml: homewrow_mods_left {
            compatible = "zmk,behavior-hold-tap";
            label = "homewrow_mods_left";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 42 43 44 45 46 47 53 54 55 56 57>;
            tapping-term-ms = <300>;
            flavor = "balanced";
            quick-tap-ms = <175>;
            require-prior-idle-ms = <250>;
            hold-trigger-on-release;
        };

        hmr: hmr {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <300>;
            hold-trigger-key-positions = <0 1 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38 39 40 41 48 49 50 51 52 2 3 4 5>;
            flavor = "balanced";
            quick-tap-ms = <175>;
            require-prior-idle-ms = <250>;
            hold-trigger-on-release;
        };

        tap_preferred: tap_preferred {
            compatible = "zmk,behavior-hold-tap";
            label = "TAP_PREFERRED";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <40>;
            flavor = "tap-preferred";
        };
    };

    combos {
        compatible = "zmk,combos";

        minus {
            bindings = <&kp MINUS>;
            key-positions = <31 30>;
        };

        par {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <31 32>;
        };

        par2 {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <27 28>;
        };

        underscore {
            bindings = <&kp UNDER>;
            key-positions = <42 43>;
        };

        bra {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <27 26>;
        };

        right {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <32 33>;
        };

        equal {
            bindings = <&kp EQUAL>;
            key-positions = <40 41>;
        };

        delete {
            bindings = <&kp PLUS>;
            key-positions = <18 19>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        QWERTY {
            bindings = <
&kp GRAVE    &kp N1     &kp N2     &kp N3      &kp N4     &kp N5      &kp N6  &kp N7     &kp N8         &kp N9           &kp N0    &kp MINUS
&kp TAB      &kp Q      &kp W      &kp E       &kp R      &kp T       &kp Y   &kp U      &kp I          &kp O            &kp P     &kp LEFT_BRACKET
&kp LSHFT    &kp A      &kp S      &kp D       &kp F      &kp G       &kp H   &kp J      &kp K          &kp L            &kp SEMI  &kp APOS
&kp LCTRL    &kp Z      &kp X      &kp C       &kp V      &kp B       &kp N   &kp M      &kp COMMA      &kp DOT          &kp FSLH  &kp RSHIFT
&lt 2 SPACE  &kp ENTER  &lt 1 TAB  &lt 1 LGUI  &kp SPACE                      &kp ENTER  &kp BACKSPACE  &kp RIGHT_SHIFT
            >;
        };

        num_and_fun {
            bindings = <
&trans  &kp F1  &kp F2  &kp F3  &kp F4   &kp F5       &trans           &trans           &trans        &trans        &trans        &trans
&trans  &kp F6  &kp F7  &kp F8  &kp F9   &kp F10      &none            &kp NUMBER_4     &kp N5        &kp NUMBER_6  &kp SLASH     &kp ASTERISK
&trans  &trans  &trans  &trans  &kp F11  &kp F12      &none            &kp NUMBER_1     &kp NUMBER_2  &kp NUMBER_3  &kp MINUS     &kp RS(EQUAL)
&trans  &trans  &trans  &trans  &trans   &trans       &kp KP_NUMBER_0  &kp KP_NUMBER_0  &none         &kp KP_DOT    &kp KP_ENTER  &kp TAB
&trans  &trans  &trans  &trans  &trans                                 &trans           &trans        &trans
            >;
        };

        auto_mouse {
            bindings = <
&trans  &trans     &trans     &trans     &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans     &trans     &trans     &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans     &trans     &trans     &trans  &trans      &trans  &mo 4   &mo 3   &trans  &trans  &trans
&trans  &trans     &trans     &trans     &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &mkp RCLK  &mkp MCLK  &mkp LCLK  &none                       &trans  &trans  &trans
            >;
        };

        scroll {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans
            >;
        };

        snipe_layer {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans
            >;
        };

        layer_7 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans
            >;
        };

        settings {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &bootloader      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &bt BT_CLR       &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans           &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans           &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans                           &trans  &trans  &trans
            >;
        };

        symbol {
            bindings = <
&trans  &trans  &trans      &trans      &trans      &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &kp LS(N7)  &kp LS(N8)  &kp LS(N9)  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &kp LS(N4)  &kp LS(N5)  &kp LS(N6)  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &kp LS(N1)  &kp LS(N2)  &kp LS(N3)  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans      &trans      &trans                          &trans  &trans  &trans
            >;
        };

        layer_8 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans
            >;
        };

        layer_9 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans
            >;
        };
    };
};
